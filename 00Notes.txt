following this vid:
https://www.youtube.com/watch?v=DVRQoVRzMIY
My "new" branch
git checkout new

To switch back to master branch:
git checkout master


To merge another branch (master) with this one:
git merge master

# Create a new repository on github. Here public one named test_1
echo "# test_1" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/pbweatherly/test_1.git
git push -u origin master

so, origin is the "name" for the url we are pushing to, i.e. it's the variable containing the url we are connecting to our remote (on our machine) project.
We can rename it something else, or use a different name than origin if we are dealing with multiple repos.

Conversely: 
git remote add origin https://github.com/pbweatherly/test_1.git
git branch -M main
git push -u origin main


#### 
git pull origin master

# for fixing conflicts & manually merging
# After add/commit then pulling:
vvv
Auto-merging README.md
CONFLICT (content): Merge conflict in README.md
Automatic merge failed; fix conflicts and then commit the 
result.
^^^

Then, README.md has the following mod from Git:
<<<<<<< HEAD
blah4
=======
blah5
>>>>>>> 0f1e35cb8b24ebc2819378f59dfb7849314daed9

Which has the arrows bracketing (& ===== splitting) the issues that I need to manually resolve.
This basically looks like a diff output.

I can resolve it to blah3 & remove the arrows/==

